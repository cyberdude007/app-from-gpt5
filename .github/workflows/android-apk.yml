name: Android Debug APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v4

      - name: Locate Gradle wrapper
        id: gw
        shell: bash
        run: |
          set -e
          WRAPPER=$(git ls-files | grep -E '(^|/)(gradlew)$' | head -n 1 || true)
          if [ -z "$WRAPPER" ]; then
            echo "No gradlew found in repo. Please commit the Gradle wrapper (gradlew, gradlew.bat, gradle/wrapper/*)." >&2
            exit 1
          fi
          echo "Using wrapper: $WRAPPER"
          echo "wrapper=$WRAPPER" >> "$GITHUB_OUTPUT"
          echo "dir=$(dirname "$WRAPPER")" >> "$GITHUB_OUTPUT"

      - name: Make gradlew executable
        run: chmod +x "${{ steps.gw.outputs.wrapper }}"

      - name: Assemble Debug APK
        run: "${{ steps.gw.outputs.wrapper }}" :app:assembleDebug --no-daemon --stacktrace

      - name: List APKs
        run: |
          find "${{ steps.gw.outputs.dir }}" -type f -path "*/app/build/outputs/apk/**/*" -maxdepth 6 -printf "%p
" || true

      - name: Prepare artifact
        shell: bash
        run: |
          set -e
          mkdir -p dist
          APK=$(find "${{ steps.gw.outputs.dir }}" -type f -path "*/app/build/outputs/apk/debug/*.apk" | head -n 1)
          if [ -z "$APK" ]; then
            echo "Debug APK not found under app/build/outputs/apk/debug." >&2
            exit 1
          fi
          cp "$APK" "dist/SplitPaisa-${{ github.run_number }}-debug.apk"
          echo "Copied: $APK"

      - name: Upload artifact (no compression)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: dist/SplitPaisa-${{ github.run_number }}-debug.apk
          compression-level: 0
          retention-days: 7

      - name: Publish APK to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: debug-${{ github.run_id }}
          name: "SplitPaisa Debug #${{ github.run_number }}"
          prerelease: true
          files: dist/SplitPaisa-${{ github.run_number }}-debug.apk

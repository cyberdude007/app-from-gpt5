name: Android Debug APK (auto-generate wrapper)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 35

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v4

      - name: Detect project root (settings.gradle)
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          SETTINGS=$(git ls-files | grep -E '(^|/)(settings\.gradle(\.kts)?)$' | head -n 1 || true)
          if [ -z "${SETTINGS:-}" ]; then
            echo "Could not find settings.gradle(.kts) anywhere in the repo." >&2
            exit 1
          fi
          PROJECT_DIR="$(dirname "$SETTINGS")"
          echo "project_dir=$PROJECT_DIR" >> "$GITHUB_OUTPUT"
          echo "Detected project dir: $PROJECT_DIR"

      - name: Ensure Gradle wrapper (generate if missing)
        id: wrapper_gen
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: |
          set -euo pipefail
          if [ -f "./gradlew" ]; then
            echo "Wrapper already exists."
            echo "wrapper=./gradlew" >> "$GITHUB_OUTPUT"
            chmod +x ./gradlew
            exit 0
          fi

          echo "No wrapper found. Detecting AGP version to pick a compatible Gradle..."
          # Look for both Groovy and Kotlin DSL plugin declarations and classpath
          AGP=$(grep -RhoE "com\.android\.tools\.build:gradle:[0-9.]+" . | sed -E 's/.*gradle:([0-9.]+).*/\1/' | head -n 1 || true)
          if [ -z "${AGP:-}" ]; then
            AGP=$(grep -RhoE "id\s*\(\s*['\"]com\.android\.(application|library)['\"]\s*\)\s*version\s*['\"][0-9.]+['\"]" . \
                  | sed -E "s/.*version\s*['\"]([0-9.]+)['\"].*/\1/" | head -n 1 || true)
          fi

          echo "Detected AGP: ${AGP:-unknown}"

          # Map AGP -> Gradle (conservative mapping)
          GV="8.7"
          case "${AGP:-}" in
            8.6* ) GV="8.7" ;;
            8.5* ) GV="8.7" ;;
            8.4* ) GV="8.6" ;;
            8.3* ) GV="8.4" ;;
            8.2* ) GV="8.2" ;;
            8.1* ) GV="8.0" ;;
            8.0* ) GV="8.0" ;;
            7.4* ) GV="7.5.1" ;;
            7.3* ) GV="7.4.2" ;;
            7.2* ) GV="7.3.3" ;;
            7.1* ) GV="7.2" ;;
            7.0* ) GV="7.0.2" ;;
            4.2* ) GV="6.7.1" ;;
          esac
          echo "Using Gradle $GV"

          URL="https://services.gradle.org/distributions/gradle-${GV}-bin.zip"
          echo "Downloading $URL"
          curl -sSL "$URL" -o gradle.zip
          unzip -q gradle.zip -d "$RUNNER_TEMP/gradle"
          GRADLE_HOME="$RUNNER_TEMP/gradle/gradle-$GV"
          "$GRADLE_HOME/bin/gradle" --version

          echo "Generating wrapper at $(pwd) with Gradle $GV"
          "$GRADLE_HOME/bin/gradle" wrapper --gradle-version "$GV"
          chmod +x ./gradlew
          echo "wrapper=./gradlew" >> "$GITHUB_OUTPUT"

      - name: Assemble Debug APK
        working-directory: ${{ steps.detect.outputs.project_dir }}
        run: ./gradlew :app:assembleDebug --no-daemon --stacktrace

      - name: Prepare artifact
        working-directory: ${{ steps.detect.outputs.project_dir }}
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist
          APK=$(find app/build/outputs/apk/debug -maxdepth 1 -type f -name "*.apk" | head -n 1 || true)
          if [ -z "${APK:-}" ]; then
            echo "Debug APK not found under app/build/outputs/apk/debug." >&2
            echo "Directory listing for app/build/outputs:"
            find app/build/outputs -maxdepth 3 -type f -printf "%p\n" || true
            exit 1
          fi
          cp "$APK" "dist/SplitPaisa-${{ github.run_number }}-debug.apk"
          echo "Copied $APK"

      - name: Upload artifact (no compression)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: ${{ steps.detect.outputs.project_dir }}/dist/SplitPaisa-${{ github.run_number }}-debug.apk
          compression-level: 0
          retention-days: 7
